{"version":3,"sources":["../src/reach-skip-nav.tsx"],"sourcesContent":["import * as React from \"react\";\nimport type * as Polymorphic from \"@reach/polymorphic\";\n\n// The user may want to provide their own ID (maybe there are multiple nav\n// menus on a page a use might want to skip at various points in tabbing?).\nlet defaultId = \"reach-skip-nav\";\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * SkipNavLink\n *\n * Renders a link that remains hidden until focused to skip to the main content.\n *\n * @see Docs https://reach.tech/skip-nav#skipnavlink\n */\nconst SkipNavLink = React.forwardRef(function SkipNavLink(\n\t{ as: Comp = \"a\", children = \"Skip to content\", contentId, ...props },\n\tforwardedRef\n) {\n\tlet id = contentId || defaultId;\n\treturn (\n\t\t<Comp\n\t\t\t{...props}\n\t\t\tref={forwardedRef}\n\t\t\thref={`#${id}`}\n\t\t\t// TODO: Remove in 1.0 (kept for back compat)\n\t\t\tdata-reach-skip-link=\"\"\n\t\t\tdata-reach-skip-nav-link=\"\"\n\t\t>\n\t\t\t{children}\n\t\t</Comp>\n\t);\n}) as Polymorphic.ForwardRefComponent<\"a\", SkipNavLinkProps>;\n\n/**\n * @see Docs https://reach.tech/skip-nav#skipnavlink-props\n */\ninterface SkipNavLinkProps {\n\t/**\n\t * Allows you to change the text for your preferred phrase or localization.\n\t *\n\t * @see Docs https://reach.tech/skip-nav#skipnavlink-children\n\t */\n\tchildren?: React.ReactNode;\n\t/**\n\t * An alternative ID for `SkipNavContent`. If used, the same value must be\n\t * provided to the `id` prop in `SkipNavContent`.\n\t *\n\t * @see Docs https://reach.tech/skip-nav#skipnavlink-contentid\n\t */\n\tcontentId?: string;\n}\n\nSkipNavLink.displayName = \"SkipNavLink\";\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * SkipNavContent\n *\n * Renders a div as the target for the link.\n *\n * @see Docs https://reach.tech/skip-nav#skipnavcontent\n */\nconst SkipNavContent = React.forwardRef(function SkipNavContent(\n\t{ as: Comp = \"div\", id: idProp, ...props },\n\tforwardedRef\n) {\n\tlet id = idProp || defaultId;\n\treturn (\n\t\t<Comp\n\t\t\t{...props}\n\t\t\tref={forwardedRef}\n\t\t\tid={id}\n\t\t\tdata-reach-skip-nav-content=\"\"\n\t\t/>\n\t);\n}) as Polymorphic.ForwardRefComponent<\"div\", SkipNavContentProps>;\n\n/**\n * @see Docs https://reach.tech/skip-nav#skipnavcontent-props\n */\ninterface SkipNavContentProps {\n\t/**\n\t * You can place the `SkipNavContent` element as a sibling to your main\n\t * content or as a wrapper.\n\t *\n\t * Keep in mind it renders a `div`, so it may mess with your CSS depending on\n\t * where itâ€™s placed.\n\t *\n\t * @example\n\t *   <SkipNavContent />\n\t *   <YourMainContent />\n\t *   // vs.\n\t *   <SkipNavContent>\n\t *     <YourMainContent/>\n\t *   </SkipNavContent>\n\t *\n\t * @see Docs https://reach.tech/skip-nav#skipnavcontent-children\n\t */\n\tchildren?: React.ReactNode;\n\t/**\n\t * An alternative ID. If used, the same value must be provided to the\n\t * `contentId` prop in `SkipNavLink`.\n\t *\n\t * @see Docs https://reach.tech/skip-nav#skipnavcontent-id\n\t */\n\tid?: string;\n}\n\nSkipNavContent.displayName = \"SkipNavContent\";\n\n////////////////////////////////////////////////////////////////////////////////\n// Exports\n\nexport type { SkipNavContentProps, SkipNavLinkProps };\nexport { SkipNavLink, SkipNavContent };\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAuB;AAKvB,IAAI,YAAY;AAWhB,IAAM,cAAc,AAAM,iBAAW,sBACpC,IACA,cACC;AAFD,eAAE,MAAI,OAAO,KAAK,WAAW,mBAAmB,cAAhD,IAA8D,kBAA9D,IAA8D,CAA5D,MAAgB,YAA8B;AAGhD,MAAI,KAAK,aAAa;AACtB,SACC,oCAAC,uCACI,QADJ;AAAA,IAEA,KAAK;AAAA,IACL,MAAM,IAAI;AAAA,IAEV,wBAAqB;AAAA,IACrB,4BAAyB;AAAA,MAExB,QACF;AAEF,CAAC;AAqBD,YAAY,cAAc;AAW1B,IAAM,iBAAiB,AAAM,iBAAW,yBACvC,IACA,cACC;AAFD,eAAE,MAAI,OAAO,OAAO,IAAI,WAAxB,IAAmC,kBAAnC,IAAmC,CAAjC,MAAkB;AAGpB,MAAI,KAAK,UAAU;AACnB,SACC,oCAAC,uCACI,QADJ;AAAA,IAEA,KAAK;AAAA,IACL;AAAA,IACA,+BAA4B;AAAA,IAC7B;AAEF,CAAC;AAiCD,eAAe,cAAc;","names":[]}