"use strict";

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js/object/define-property");
var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault").default;
_Object$defineProperty(exports, "__esModule", {
  value: true
});
exports.useCurrentUser = void 0;
var _globalThis2 = _interopRequireDefault(require("@babel/runtime-corejs3/core-js/global-this"));
var _stringify = _interopRequireDefault(require("@babel/runtime-corejs3/core-js/json/stringify"));
var _react = require("react");
var _useToken = require("./useToken");
const useCurrentUser = authImplementation => {
  const getToken = (0, _useToken.useToken)(authImplementation);
  return (0, _react.useCallback)(async () => {
    // Always get a fresh token, rather than use the one in state
    const token = await getToken();
    const response = await _globalThis2.default.fetch(_globalThis2.default.RWJS_API_GRAPHQL_URL, {
      method: 'POST',
      credentials: 'include',
      headers: {
        'content-type': 'application/json',
        'auth-provider': authImplementation.type,
        authorization: `Bearer ${token}`
      },
      body: (0, _stringify.default)({
        query: 'query __REDWOOD__AUTH_GET_CURRENT_USER { redwood { currentUser } }'
      })
    });
    if (response.ok) {
      const {
        data
      } = await response.json();
      return data?.redwood?.currentUser;
    } else {
      throw new Error(`Could not fetch current user: ${response.statusText} (${response.status})`);
    }
  }, [authImplementation, getToken]);
};
exports.useCurrentUser = useCurrentUser;