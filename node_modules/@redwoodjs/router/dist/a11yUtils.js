"use strict";

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js/object/define-property");
var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault").default;
_Object$defineProperty(exports, "__esModule", {
  value: true
});
exports.resetFocus = exports.getFocus = exports.getAnnouncement = void 0;
var _globalThis2 = _interopRequireDefault(require("@babel/runtime-corejs3/core-js/global-this"));
/**
 * gets the announcement for the new page.
 * called in one of active-route-loader's `useEffect`.
 *
 * the order of priority is:
 * 1. RouteAnnouncement (the most specific one)
 * 2. h1
 * 3. document.title
 * 4. location.pathname
 */
const getAnnouncement = () => {
  const routeAnnouncement = _globalThis2.default?.document.querySelectorAll('[data-redwood-route-announcement]')?.[0];
  if (routeAnnouncement?.textContent) {
    return routeAnnouncement.textContent;
  }
  const pageHeading = _globalThis2.default?.document.querySelector(`h1`);
  if (pageHeading?.textContent) {
    return pageHeading.textContent;
  }
  if (_globalThis2.default?.document.title) {
    return document.title;
  }
  return `new page at ${_globalThis2.default?.location.pathname}`;
};
exports.getAnnouncement = getAnnouncement;
const getFocus = () => {
  const routeFocus = _globalThis2.default?.document.querySelectorAll('[data-redwood-route-focus]')?.[0];
  if (!routeFocus || !routeFocus.children.length || routeFocus.children[0].tabIndex < 0) {
    return null;
  }
  return routeFocus.children[0];
};

// note: tried document.activeElement.blur(), but that didn't reset the focus flow
exports.getFocus = getFocus;
const resetFocus = () => {
  _globalThis2.default?.document.body.setAttribute('tabindex', '-1');
  _globalThis2.default?.document.body.focus();
  _globalThis2.default?.document.body.removeAttribute('tabindex');
};
exports.resetFocus = resetFocus;