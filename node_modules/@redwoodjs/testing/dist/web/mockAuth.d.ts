import React from 'react';
export * from '@redwoodjs/auth/dist/index';
interface Props {
    children: React.ReactNode;
}
export declare function useAuth(): {
    loading: boolean;
    isAuthenticated: boolean;
    logIn: () => Promise<void>;
    logOut: () => Promise<void>;
    signUp: () => Promise<void>;
    currentUser: Record<string, unknown> | null;
    userMetadata: Record<string, unknown> | null;
    getToken: () => Promise<null>;
    getCurrentUser: () => Promise<Record<string, unknown> | null>;
    hasRole: (roles: string | string[]) => boolean;
    reauthenticate: () => Promise<void>;
    forgotPassword: () => Promise<void>;
    resetPassword: () => Promise<void>;
    validateResetToken: () => Promise<void>;
    type: string;
    client: undefined;
    hasError: boolean;
};
export declare const createAuthentication: () => {
    AuthProvider: React.FC<Props>;
    useAuth: typeof useAuth;
};
//# sourceMappingURL=mockAuth.d.ts.map