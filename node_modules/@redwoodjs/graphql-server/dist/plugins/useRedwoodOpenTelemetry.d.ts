import { Plugin } from '@envelop/core';
import * as opentelemetry from '@opentelemetry/api';
export declare enum AttributeName {
    EXECUTION_ERROR = "graphql.execute.error",
    EXECUTION_RESULT = "graphql.execute.result",
    RESOLVER_EXCEPTION = "graphql.resolver.exception",
    RESOLVER_FIELD_NAME = "graphql.resolver.fieldName",
    RESOLVER_TYPE_NAME = "graphql.resolver.typeName",
    RESOLVER_RESULT_TYPE = "graphql.resolver.resultType",
    RESOLVER_ARGS = "graphql.resolver.args",
    EXECUTION_OPERATION_NAME = "graphql.execute.operationName",
    EXECUTION_OPERATION_DOCUMENT = "graphql.execute.document",
    EXECUTION_VARIABLES = "graphql.execute.variables"
}
declare const tracingSpanSymbol = "OPEN_TELEMETRY_GRAPHQL";
type PluginContext = {
    [tracingSpanSymbol]: opentelemetry.Span;
};
export declare const useRedwoodOpenTelemetry: () => Plugin<PluginContext>;
export {};
//# sourceMappingURL=useRedwoodOpenTelemetry.d.ts.map