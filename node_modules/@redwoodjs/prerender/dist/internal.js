"use strict";

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js/object/define-property");
var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault").default;
_Object$defineProperty(exports, "__esModule", {
  value: true
});
exports.writeToDist = exports.registerShims = exports.getRootHtmlPath = void 0;
var _globalThis2 = _interopRequireDefault(require("@babel/runtime-corejs3/core-js/global-this"));
var _fs = _interopRequireDefault(require("fs"));
var _path = _interopRequireDefault(require("path"));
var _fetch = require("@whatwg-node/fetch");
var _projectConfig = require("@redwoodjs/project-config");
const INDEX_FILE = _path.default.join((0, _projectConfig.getPaths)().web.dist, 'index.html');
const DEFAULT_INDEX = _path.default.join((0, _projectConfig.getPaths)().web.dist, '200.html');
const getRootHtmlPath = () => {
  if (_fs.default.existsSync(DEFAULT_INDEX)) {
    return DEFAULT_INDEX;
  } else {
    return INDEX_FILE;
  }
};
exports.getRootHtmlPath = getRootHtmlPath;
const registerShims = routerPath => {
  const rwjsConfig = (0, _projectConfig.getConfig)();
  _globalThis2.default.RWJS_ENV = {
    RWJS_API_GRAPHQL_URL: rwjsConfig.web.apiGraphQLUrl ?? rwjsConfig.web.apiUrl + '/graphql',
    RWJS_API_URL: rwjsConfig.web.apiUrl,
    __REDWOOD__APP_TITLE: rwjsConfig.web.title
  };
  _globalThis2.default.RWJS_DEBUG_ENV = {
    RWJS_SRC_ROOT: (0, _projectConfig.getPaths)().web.src
  };

  // For now set bundler to webpack for prerendering
  _globalThis2.default.RWJS_WEB_BUNDLER = 'webpack';
  _globalThis2.default.__REDWOOD__PRERENDERING = true;
  _globalThis2.default.__REDWOOD__HELMET_CONTEXT = {};

  // Let routes auto loader plugin know
  process.env.__REDWOOD__PRERENDERING = '1';

  // This makes code like globalThis.location.pathname work also outside of the
  // router
  _globalThis2.default.location = {
    ..._globalThis2.default.location,
    pathname: routerPath
  };
  // Shim fetch in the node.js context
  // This is to avoid using cross-fetch when configuring apollo-client
  // which would cause the client bundle size to increase
  if (!_globalThis2.default.fetch) {
    // eslint-disable-next-line @typescript-eslint/ban-ts-comment
    // @ts-ignore-next-line
    _globalThis2.default.fetch = _fetch.fetch;
  }
};
exports.registerShims = registerShims;
const writeToDist = (outputHtmlPath, renderOutput) => {
  const dirName = _path.default.dirname(outputHtmlPath);
  const exist = _fs.default.existsSync(dirName);
  if (!exist) {
    _fs.default.mkdirSync(dirName, {
      recursive: true
    });
  }
  _fs.default.writeFileSync(outputHtmlPath, renderOutput);
};
exports.writeToDist = writeToDist;